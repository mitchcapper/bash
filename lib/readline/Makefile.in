## -*- text -*- #############################################################
#								            #
# Makefile for the Bash versions of the GNU Readline and History Libraries. #
#								            #
#############################################################################

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.

#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.

#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

PACKAGE = @PACKAGE_NAME@
VERSION = @PACKAGE_VERSION@

PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_VERSION = @PACKAGE_VERSION@
OBJEXT = @OBJEXT@
srcdir = @srcdir@
VPATH = @srcdir@
topdir = @top_srcdir@
BUILD_DIR = @BUILD_DIR@

datarootdir = @datarootdir@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

CC = @CC@
RANLIB = @RANLIB@
AR = @AR@
ARFLAGS = @ARFLAGS@
RM = rm -f
CP = cp
MV = mv

SHELL = @MAKE_SHELL@

# Programs to make tags files.
ETAGS = etags -tw
CTAGS = ctags -tw

DEBUG = @DEBUG@

CFLAGS = @CFLAGS@ -DHAVE_CONFIG_H -DNO_TTY_DRIVER -DHAVE_DIRENT_H -DHAVE_POSIX_SIGNALS -DHAVE_SYS_TIME_H -DHAVE_TIMEVAL -DHAVE_GETTIMEOFDAY -DHAVE_UNISTD_H
LOCAL_CFLAGS = @LOCAL_CFLAGS@ ${DEBUG}
STYLE_CFLAGS = @STYLE_CFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@

DEFS = @DEFS@
LOCAL_DEFS = @LOCAL_DEFS@

INCLUDES = -I. -I$(BUILD_DIR) -I$(topdir) -I$(topdir)/gnu -I$(topdir)/lib -I$(topdir)/include

CCFLAGS = $(DEFS) $(LOCAL_DEFS) $(APP_CFLAGS) $(CPPFLAGS) ${INCLUDES} \
	  $(STYLE_CFLAGS) $(LOCAL_CFLAGS) $(CFLAGS) ${ADDON_CFLAGS}

%.obj: %.c
	${RM} $@
	$(CC) $(CCFLAGS) -c $<

# The name of the main library target.
LIBRARY_NAME = libreadline.a

# The C code source files for this library.
CSOURCES = $(srcdir)/readline.c $(srcdir)/funmap.c $(srcdir)/keymaps.c \
	   $(srcdir)/vi_mode.c $(srcdir)/parens.c $(srcdir)/rltty.c \
	   $(srcdir)/complete.c $(srcdir)/bind.c $(srcdir)/isearch.c \
	   $(srcdir)/display.c $(srcdir)/signals.c $(srcdir)/emacs_keymap.c \
	   $(srcdir)/vi_keymap.c $(srcdir)/util.c $(srcdir)/kill.c \
	   $(srcdir)/undo.c $(srcdir)/macro.c $(srcdir)/input.c \
	   $(srcdir)/callback.c $(srcdir)/terminal.c $(srcdir)/xmalloc.c \
	   $(srcdir)/history.c $(srcdir)/histsearch.c $(srcdir)/histexpand.c \
	   $(srcdir)/histfile.c $(srcdir)/nls.c $(srcdir)/search.c \
	   $(srcdir)/shell.c $(srcdir)/tilde.c $(srcdir)/savestring.c \
	   $(srcdir)/text.c $(srcdir)/misc.c $(srcdir)/compat.c \
	   $(srcdir)/colors.c $(srcdir)/parse-colors.c \
	   $(srcdir)/mbutil.c $(srcdir)/xfree.c

# The header files for this library.
HSOURCES = readline.h rldefs.h chardefs.h keymaps.h history.h histlib.h \
	   posixstat.h posixdir.h posixjmp.h tilde.h rlconf.h rltty.h \
	   ansi_stdlib.h rlstdc.h tcap.h xmalloc.h rlprivate.h rlshell.h \
	   rltypedefs.h rlmbutil.h colors.h parse-colors.h

HISTOBJ = history.$(OBJEXT) histexpand.$(OBJEXT) histfile.$(OBJEXT) histsearch.$(OBJEXT) shell.$(OBJEXT) savestring.$(OBJEXT) \
	  mbutil.$(OBJEXT)
TILDEOBJ = tilde.$(OBJEXT)
COLORSOBJ = colors.$(OBJEXT) parse-colors.$(OBJEXT)
OBJECTS = readline.$(OBJEXT) vi_mode.$(OBJEXT) funmap.$(OBJEXT) keymaps.$(OBJEXT) parens.$(OBJEXT) search.$(OBJEXT) \
	  rltty.$(OBJEXT) complete.$(OBJEXT) bind.$(OBJEXT) isearch.$(OBJEXT) display.$(OBJEXT) signals.$(OBJEXT) \
	  util.$(OBJEXT) kill.$(OBJEXT) undo.$(OBJEXT) macro.$(OBJEXT) input.$(OBJEXT) callback.$(OBJEXT) terminal.$(OBJEXT) \
	  text.$(OBJEXT) nls.$(OBJEXT) misc.$(OBJEXT) $(HISTOBJ) $(TILDEOBJ) $(COLORSOBJ) \
	  xmalloc.$(OBJEXT) xfree.$(OBJEXT) compat.$(OBJEXT)

# The texinfo files which document this library.
DOCSOURCE = doc/rlman.texinfo doc/rltech.texinfo doc/rluser.texinfo
DOCOBJECT = doc/readline.dvi
DOCSUPPORT = doc/Makefile
DOCUMENTATION = $(DOCSOURCE) $(DOCOBJECT) $(DOCSUPPORT)

SUPPORT = Makefile ChangeLog $(DOCSUPPORT) examples/[-a-z.]*

SOURCES  = $(CSOURCES) $(HSOURCES) $(DOCSOURCE)

THINGS_TO_TAR = $(SOURCES) $(SUPPORT)

INSTALLED_HEADERS = readline.h chardefs.h keymaps.h history.h tilde.h \
		    rlstdc.h rlconf.h rltypedefs.h

##########################################################################

all: libreadline.a libhistory.a

libreadline.a: $(OBJECTS)
	$(RM) $@
	$(AR) $(ARFLAGS) $@ $(OBJECTS)
	-test -n "$(RANLIB)" && $(RANLIB) $@

libhistory.a: $(HISTOBJ) xmalloc.$(OBJEXT) xfree.$(OBJEXT)
	$(RM) $@
	$(AR) $(ARFLAGS) $@ $(HISTOBJ) xmalloc.$(OBJEXT) xfree.$(OBJEXT)
	-test -n "$(RANLIB)" && $(RANLIB) $@

documentation: force
	test -d doc || mkdir doc
	-( cd doc && $(MAKE) $(MFLAGS) )

# Since tilde.c is shared between readline and bash, make sure we compile
# it with the right flags when it's built as part of readline
tilde.$(OBJEXT):	tilde.c
	rm -f $@
	$(CC) $(CCFLAGS) -DREADLINE_LIBRARY -c $(srcdir)/tilde.c

force:

install:
	@echo "This version of the readline library should not be installed."

uninstall:
	@echo "This version of the readline library should not be installed."

TAGS:	force
	$(ETAGS) $(CSOURCES) $(HSOURCES)

tags:	force
	$(CTAGS) $(CSOURCES) $(HSOURCES)

clean:	force
	$(RM) $(OBJECTS) *.a
	-( cd doc && $(MAKE) $(MFLAGS) $@ )

mostlyclean: clean
	-( cd doc && $(MAKE) $(MFLAGS) $@ )

distclean maintainer-clean: clean
	-( cd doc && $(MAKE) $(MFLAGS) $@ )
	$(RM) Makefile
	$(RM) TAGS tags

# Dependencies
bind.$(OBJEXT): ansi_stdlib.h posixstat.h
bind.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
bind.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
bind.$(OBJEXT): history.h rlstdc.h
callback.$(OBJEXT): rlconf.h ansi_stdlib.h
callback.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
callback.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h rlstdc.h
compat.$(OBJEXT): ${BUILD_DIR}/config.h
compat.$(OBJEXT): rlstdc.h rltypedefs.h
complete.$(OBJEXT): ansi_stdlib.h posixdir.h posixstat.h
complete.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
complete.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h rlstdc.h
complete.$(OBJEXT): colors.h
display.$(OBJEXT): ansi_stdlib.h posixstat.h
display.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
display.$(OBJEXT): tcap.h
display.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
display.$(OBJEXT): history.h rlstdc.h
funmap.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
funmap.$(OBJEXT): rlconf.h ansi_stdlib.h rlstdc.h
funmap.$(OBJEXT): ${BUILD_DIR}/config.h
histexpand.$(OBJEXT): ansi_stdlib.h
histexpand.$(OBJEXT): history.h histlib.h rlstdc.h
histexpand.$(OBJEXT): ${BUILD_DIR}/config.h
histfile.$(OBJEXT): ansi_stdlib.h
histfile.$(OBJEXT): history.h histlib.h rlstdc.h
histfile.$(OBJEXT): ${BUILD_DIR}/config.h
history.$(OBJEXT): ansi_stdlib.h
history.$(OBJEXT): history.h histlib.h rlstdc.h
history.$(OBJEXT): ${BUILD_DIR}/config.h
histsearch.$(OBJEXT): ansi_stdlib.h
histsearch.$(OBJEXT): history.h histlib.h rlstdc.h
histsearch.$(OBJEXT): ${BUILD_DIR}/config.h
input.$(OBJEXT): ansi_stdlib.h
input.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
input.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h rlstdc.h
isearch.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
isearch.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
isearch.$(OBJEXT): ansi_stdlib.h history.h rlstdc.h
keymaps.$(OBJEXT): emacs_keymap.c vi_keymap.c
keymaps.$(OBJEXT): keymaps.h rltypedefs.h chardefs.h rlconf.h ansi_stdlib.h
keymaps.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
keymaps.$(OBJEXT): ${BUILD_DIR}/config.h rlstdc.h
kill.$(OBJEXT): ansi_stdlib.h
kill.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
kill.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
kill.$(OBJEXT): history.h rlstdc.h
macro.$(OBJEXT): ansi_stdlib.h
macro.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
macro.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
macro.$(OBJEXT): history.h rlstdc.h
mbutil.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h rlmbutil.h
mbutil.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h rlstdc.h
misc.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
misc.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
misc.$(OBJEXT): history.h rlstdc.h ansi_stdlib.h
nls.$(OBJEXT): ansi_stdlib.h
nls.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
nls.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
nls.$(OBJEXT): history.h rlstdc.h
parens.$(OBJEXT): rlconf.h
parens.$(OBJEXT): ${BUILD_DIR}/config.h
parens.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h rlstdc.h
readline.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
readline.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
readline.$(OBJEXT): history.h rlstdc.h
readline.$(OBJEXT): posixstat.h ansi_stdlib.h posixjmp.h
rltty.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
rltty.$(OBJEXT): rltty.h
rltty.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h rlstdc.h
savestring.$(OBJEXT): ${BUILD_DIR}/config.h
search.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
search.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
search.$(OBJEXT): ansi_stdlib.h history.h rlstdc.h
shell.$(OBJEXT): ${BUILD_DIR}/config.h ansi_stdlib.h
signals.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
signals.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
signals.$(OBJEXT): history.h rlstdc.h
terminal.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
terminal.$(OBJEXT): tcap.h
terminal.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
terminal.$(OBJEXT): history.h rlstdc.h
text.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
text.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
text.$(OBJEXT): history.h rlstdc.h ansi_stdlib.h
rltty.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
tilde.$(OBJEXT): ansi_stdlib.h
tilde.$(OBJEXT): ${BUILD_DIR}/config.h
tilde.$(OBJEXT): tilde.h
undo.$(OBJEXT): ansi_stdlib.h
undo.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
undo.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
undo.$(OBJEXT): history.h rlstdc.h xmalloc.h
util.$(OBJEXT): posixjmp.h ansi_stdlib.h
util.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
util.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h rlstdc.h
vi_mode.$(OBJEXT): rldefs.h ${BUILD_DIR}/config.h rlconf.h
vi_mode.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h
vi_mode.$(OBJEXT): history.h ansi_stdlib.h rlstdc.h
xmalloc.$(OBJEXT): ${BUILD_DIR}/config.h ansi_stdlib.h
xfree.$(OBJEXT): ${BUILD_DIR}/config.h ansi_stdlib.h

colors.$(OBJEXT): ${BUILD_DIR}/config.h colors.h
colors.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h rlstdc.h
colors.$(OBJEXT): rlconf.h
colors.$(OBJEXT): ansi_stdlib.h posixstat.h
parse-colors.$(OBJEXT): ${BUILD_DIR}/config.h colors.h parse-colors.h
parse-colors.$(OBJEXT): rldefs.h rlconf.h
parse-colors.$(OBJEXT): readline.h keymaps.h rltypedefs.h chardefs.h tilde.h rlstdc.h

bind.$(OBJEXT): rlshell.h
histfile.$(OBJEXT): rlshell.h
nls.$(OBJEXT): rlshell.h
readline.$(OBJEXT): rlshell.h
shell.$(OBJEXT): rlshell.h
terminal.$(OBJEXT): rlshell.h
histexpand.$(OBJEXT): rlshell.h

bind.$(OBJEXT): rlprivate.h
callback.$(OBJEXT): rlprivate.h
complete.$(OBJEXT): rlprivate.h
display.$(OBJEXT): rlprivate.h
input.$(OBJEXT): rlprivate.h
isearch.$(OBJEXT): rlprivate.h
kill.$(OBJEXT): rlprivate.h
macro.$(OBJEXT): rlprivate.h
mbutil.$(OBJEXT): rlprivate.h
misc.$(OBJEXT): rlprivate.h
nls.$(OBJEXT): rlprivate.h
parens.$(OBJEXT): rlprivate.h
readline.$(OBJEXT): rlprivate.h
rltty.$(OBJEXT): rlprivate.h
search.$(OBJEXT): rlprivate.h
signals.$(OBJEXT): rlprivate.h
terminal.$(OBJEXT): rlprivate.h
text.$(OBJEXT): rlprivate.h
undo.$(OBJEXT): rlprivate.h
util.$(OBJEXT): rlprivate.h
vi_mode.$(OBJEXT): rlprivate.h
colors.$(OBJEXT): rlprivate.h
parse-colors.$(OBJEXT): rlprivate.h

bind.$(OBJEXT): xmalloc.h
complete.$(OBJEXT): xmalloc.h
display.$(OBJEXT): xmalloc.h
funmap.$(OBJEXT): xmalloc.h
histexpand.$(OBJEXT): xmalloc.h
histfile.$(OBJEXT): xmalloc.h
history.$(OBJEXT): xmalloc.h
input.$(OBJEXT): xmalloc.h
isearch.$(OBJEXT): xmalloc.h
keymaps.$(OBJEXT): xmalloc.h
kill.$(OBJEXT): xmalloc.h
macro.$(OBJEXT): xmalloc.h
mbutil.$(OBJEXT): xmalloc.h
misc.$(OBJEXT): xmalloc.h
readline.$(OBJEXT): xmalloc.h
savestring.$(OBJEXT): xmalloc.h
search.$(OBJEXT): xmalloc.h
shell.$(OBJEXT): xmalloc.h
terminal.$(OBJEXT): xmalloc.h
text.$(OBJEXT): xmalloc.h
tilde.$(OBJEXT): xmalloc.h
undo.$(OBJEXT): xmalloc.h
util.$(OBJEXT): xmalloc.h
vi_mode.$(OBJEXT): xmalloc.h
xfree.$(OBJEXT): xmalloc.h
xmalloc.$(OBJEXT): xmalloc.h
colors.$(OBJEXT): xmalloc.h
parse-colors.$(OBJEXT): xmalloc.h

complete.$(OBJEXT): rlmbutil.h
display.$(OBJEXT): rlmbutil.h
histexpand.$(OBJEXT): rlmbutil.h
input.$(OBJEXT): rlmbutil.h
isearch.$(OBJEXT): rlmbutil.h
mbutil.$(OBJEXT): rlmbutil.h
misc.$(OBJEXT): rlmbutil.h
readline.$(OBJEXT): rlmbutil.h
search.$(OBJEXT): rlmbutil.h
text.$(OBJEXT): rlmbutil.h
vi_mode.$(OBJEXT): rlmbutil.h
colors.$(OBJEXT): rlmbutil.h
parse-colors.$(OBJEXT): rlmbutil.h

# Rules for deficient makes, like SunOS and Solaris
bind.$(OBJEXT): bind.c
callback.$(OBJEXT): callback.c
compat.$(OBJEXT): compat.c
complete.$(OBJEXT): complete.c
display.$(OBJEXT): display.c
funmap.$(OBJEXT): funmap.c
input.$(OBJEXT): input.c
isearch.$(OBJEXT): isearch.c
keymaps.$(OBJEXT): keymaps.c emacs_keymap.c vi_keymap.c
kill.$(OBJEXT): kill.c
macro.$(OBJEXT): macro.c
mbutil.$(OBJEXT): mbutil.c
misc.$(OBJEXT): misc.c
nls.$(OBJEXT): nls.c
parens.$(OBJEXT): parens.c
readline.$(OBJEXT): readline.c
rltty.$(OBJEXT): rltty.c
savestring.$(OBJEXT): savestring.c
search.$(OBJEXT): search.c
shell.$(OBJEXT): shell.c
signals.$(OBJEXT): signals.c
terminal.$(OBJEXT): terminal.c
text.$(OBJEXT): text.c
tilde.$(OBJEXT): tilde.c
undo.$(OBJEXT): undo.c
util.$(OBJEXT): util.c
vi_mode.$(OBJEXT): vi_mode.c
xfree.$(OBJEXT): xfree.c
xmalloc.$(OBJEXT): xmalloc.c

colors.$(OBJEXT): colors.c
parse-colors.$(OBJEXT): parse-colors.c

histexpand.$(OBJEXT): histexpand.c
histfile.$(OBJEXT): histfile.c
history.$(OBJEXT): history.c
histsearch.$(OBJEXT): histsearch.c
