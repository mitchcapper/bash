# This Makefile for building libbuiltins.a is in -*- text -*- for Emacs.
#
# Copyright (C) 1996-2022 Free Software Foundation, Inc.

#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.

#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.

#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

PACKAGE = @PACKAGE_NAME@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_VERSION = @PACKAGE_VERSION@

#
SHELL = @MAKE_SHELL@
RANLIB = @RANLIB@
CC = @CC@
CC_FOR_BUILD = @CC_FOR_BUILD@
AR = @AR@
ARFLAGS = @ARFLAGS@
RM = rm -f
CP = cp
OBJEXT = @OBJEXT@
EXEEXT = @EXEEXT@

prefix = @prefix@

srcdir = @srcdir@
VPATH = @srcdir@
topdir = @top_srcdir@

datarootdir = @datarootdir@

includedir = @includedir@
datadir = @datadir@
localedir = @localedir@

loadablesdir = @loadablesdir@

# Support an alternate destination root directory for package building
DESTDIR =

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
BUILD_DIR = @BUILD_DIR@

LIBBUILD = ${BUILD_DIR}/gnu ${BUILD_DIR}/lib

PROFILE_FLAGS = @PROFILE_FLAGS@
CFLAGS = @CFLAGS@
CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@ @CROSS_COMPILE@
STYLE_CFLAGS = @STYLE_CFLAGS@
CPPFLAGS = @CPPFLAGS@
CPPFLAGS_FOR_BUILD = @CPPFLAGS_FOR_BUILD@
LOCAL_CFLAGS = @LOCAL_CFLAGS@ ${DEBUG}
DEFS = @DEFS@
LOCAL_DEFS = @LOCAL_DEFS@

LIBS = @LIBS@ -lgnu
LDFLAGS = @LDFLAGS@ $(LOCAL_LDFLAGS) $(CFLAGS) -L$(topdir)/gnu -L$(topdir)/lib
LDFLAGS_FOR_BUILD = @LDFLAGS_FOR_BUILD@ $(LOCAL_LDFLAGS) $(CFLAGS_FOR_BUILD)
LOCAL_LDFLAGS = @LOCAL_LDFLAGS@
LIBS_FOR_BUILD = @LIBS_FOR_BUILD@ $(topdir)/debug.obj -lgnu
#LIBS_FOR_BUILD = $(LIBS)

BASHINCDIR = ${topdir}/include

RL_INCLUDEDIR = @RL_INCLUDEDIR@

INTL_LIBSRC = ${topdir}/lib/intl
INTL_BUILDDIR = ${LIBBUILD}/intl
INTL_LIBDIR = ${INTL_BUILDDIR}
INTL_LIBRARY = ${INTL_BUILDDIR}/libintl.a
INTL_INC = @INTL_INC@
INTL_DEP = @INTL_DEP@
LIBINTL_H = @LIBINTL_H@

HELPDIR = @HELPDIR@
MKDIRS = ${topdir}/support/mkdirs

HELPFILES_TARGET = @HELPFILES_TARGET@

INCLUDES = @RL_INCLUDE@ -I$(topdir) -I$(BASHINCDIR) -I$(topdir)/gnu -I$(topdir)/lib -I$(srcdir) ${INTL_INC}

BASE_CCFLAGS = ${PROFILE_FLAGS} $(DEFS) $(LOCAL_DEFS) $(SYSTEM_FLAGS) \
	 ${INCLUDES} $(STYLE_CFLAGS) $(LOCAL_CFLAGS)

CCFLAGS = ${ADDON_CFLAGS} $(BASE_CCFLAGS) $(CPPFLAGS) $(CFLAGS)

CCFLAGS_FOR_BUILD = $(BASE_CCFLAGS) $(CPPFLAGS_FOR_BUILD) $(CFLAGS_FOR_BUILD)

GCC_LINT_FLAGS = -Wall -Wshadow -Wpointer-arith -Wcast-qual \
		 -Wcast-align -Wstrict-prototypes -Wconversion \
		 -Wmissing-prototypes -Wtraditional -Wredundant-decls -pedantic

MKBUILTINS = mkbuiltins$(EXEEXT)
DIRECTDEFINE = -D $(srcdir)
HELPDIRDEFINE = @HELPDIRDEFINE@
HELPSTRINGS = @HELPSTRINGS@

# xxx this is bad style
RL_LIBSRC = $(topdir)/lib/readline

.SUFFIXES:
.SUFFIXES: .def .c .$(OBJEXT)
# How to make a .$(OBJEXT) file from a .def file.
.def.$(OBJEXT):
	$(RM) $@
	./$(MKBUILTINS) $(DIRECTDEFINE) $<
	$(CC) -c $(CCFLAGS) $*.c || ( $(RM) $*.c ; exit 1 )
	$(RM) $*.c

# How to make a .c file from a .def file.
.def.c:
	$(RM) $@
	./$(MKBUILTINS) $(DIRECTDEFINE) $<

# default rule for making a .$(OBJEXT) file from a .c file
%.obj: %.c
	${RM} $@
	$(CC) $(CCFLAGS) -c $<

DEFSRC =  $(srcdir)/alias.def $(srcdir)/bind.def $(srcdir)/break.def \
	  $(srcdir)/builtin.def $(srcdir)/caller.def \
	  $(srcdir)/cd.def $(srcdir)/colon.def \
	  $(srcdir)/command.def $(srcdir)/declare.def $(srcdir)/echo.def \
	  $(srcdir)/enable.def $(srcdir)/eval.def $(srcdir)/getopts.def \
	  $(srcdir)/exec.def $(srcdir)/exit.def $(srcdir)/fc.def \
	  $(srcdir)/fg_bg.def $(srcdir)/hash.def $(srcdir)/help.def \
	  $(srcdir)/history.def $(srcdir)/jobs.def $(srcdir)/kill.def \
	  $(srcdir)/let.def $(srcdir)/read.def $(srcdir)/return.def \
	  $(srcdir)/set.def $(srcdir)/setattr.def $(srcdir)/shift.def \
	  $(srcdir)/source.def $(srcdir)/suspend.def $(srcdir)/test.def \
	  $(srcdir)/times.def $(srcdir)/trap.def $(srcdir)/type.def \
	  $(srcdir)/ulimit.def $(srcdir)/umask.def $(srcdir)/wait.def \
	  $(srcdir)/reserved.def $(srcdir)/pushd.def $(srcdir)/shopt.def \
	  $(srcdir)/printf.def $(srcdir)/complete.def $(srcdir)/mapfile.def

STATIC_SOURCE = common.c evalstring.c evalfile.c getopt.c bashgetopt.c \
		getopt.h

OFILES = builtins.$(OBJEXT) \
	alias.$(OBJEXT) bind.$(OBJEXT) break.$(OBJEXT) builtin.$(OBJEXT) caller.$(OBJEXT) cd.$(OBJEXT) colon.$(OBJEXT) command.$(OBJEXT) \
	common.$(OBJEXT) declare.$(OBJEXT) echo.$(OBJEXT) enable.$(OBJEXT) eval.$(OBJEXT) evalfile.$(OBJEXT) \
	evalstring.$(OBJEXT) exec.$(OBJEXT) exit.$(OBJEXT) fc.$(OBJEXT) fg_bg.$(OBJEXT) hash.$(OBJEXT) help.$(OBJEXT) history.$(OBJEXT) \
	jobs.$(OBJEXT) kill.$(OBJEXT) let.$(OBJEXT) mapfile.$(OBJEXT) \
	pushd.$(OBJEXT) read.$(OBJEXT) return.$(OBJEXT) set.$(OBJEXT) setattr.$(OBJEXT) shift.$(OBJEXT) source.$(OBJEXT) \
	suspend.$(OBJEXT) test.$(OBJEXT) times.$(OBJEXT) trap.$(OBJEXT) type.$(OBJEXT) ulimit.$(OBJEXT) umask.$(OBJEXT) \
	wait.$(OBJEXT) getopts.$(OBJEXT) shopt.$(OBJEXT) printf.$(OBJEXT) getopt.$(OBJEXT) bashgetopt.$(OBJEXT) complete.$(OBJEXT)

CREATED_FILES = builtext.h builtins.c psize.aux pipesize.h tmpbuiltins.c \
	tmpbuiltins.h
CREATED_OBJECTS = tmpbuiltins.$(OBJEXT) gen-helpfiles.$(OBJEXT) mkbuiltins.$(OBJEXT)

all: $(MKBUILTINS) libbuiltins.a $(HELPFILES_TARGET)
targets: libbuiltins.a $(HELPFILES_TARGET)

libbuiltins.a: $(MKBUILTINS) $(OFILES) builtins.$(OBJEXT)
	$(RM) $@
	$(AR) $(ARFLAGS) $@ $(OFILES)
	-$(RANLIB) $@

tmpbuiltins.c:	$(MKBUILTINS) $(DEFSRC)
	./$(MKBUILTINS) -externfile tmpbuiltins.h -structfile $@ \
		-noproduction -nofunctions \
		$(DIRECTDEFINE) $(HELPSTRINGS) $(DEFSRC)

tmpbuiltins.h:	tmpbuiltins.c

gen-helpfiles.$(OBJEXT): ../config.h
gen-helpfiles.$(OBJEXT): gen-helpfiles.c
	$(RM) $@
	$(CC_FOR_BUILD) -c $(CCFLAGS_FOR_BUILD) $<

gen-helpfiles:	tmpbuiltins.$(OBJEXT) gen-helpfiles.$(OBJEXT)
	$(CC_FOR_BUILD) $(LDFLAGS_FOR_BUILD) -o $@ gen-helpfiles.$(OBJEXT) tmpbuiltins.$(OBJEXT) $(LIBS_FOR_BUILD)

builtext.h builtins.c: $(MKBUILTINS) $(DEFSRC)
	@RECPID=$$$$ ; \
	NEW_BUILTEXT=builtext-$$RECPID.h NEW_BUILTINS=builtins-$$RECPID.c ; \
	./$(MKBUILTINS) -externfile $$NEW_BUILTEXT \
	    -includefile builtext.h \
	    -structfile $$NEW_BUILTINS \
	    -noproduction $(DIRECTDEFINE) $(HELPDIRDEFINE) $(HELPSTRINGS) $(DEFSRC) ; \
	if cmp -s $$NEW_BUILTEXT builtext.h 2>/dev/null; then \
		$(RM) $$NEW_BUILTEXT; \
	else \
		mv $$NEW_BUILTEXT builtext.h; \
	fi ; \
	if cmp -s $$NEW_BUILTINS builtins.c 2>/dev/null; then \
		$(RM) $$NEW_BUILTINS ; \
	else \
		mv $$NEW_BUILTINS builtins.c; \
	fi

helpdoc:	gen-helpfiles
	./gen-helpfiles ${HELPDIRDEFINE}

install-help:	$(HELPFILES_TARGET)
	@-if test -n "${HELPDIR}" && test -d helpfiles ; then \
		test -d $(DESTDIR)${HELPDIR} || ${SHELL} ${MKDIRS} $(DESTDIR)$(HELPDIR) ;\
		( for f in helpfiles/*; do \
			echo installing $$f; \
			${INSTALL_DATA} $$f $(DESTDIR)$(HELPDIR); \
		  done; ) ; \
	fi

install:	@HELPINSTALL@

mkbuiltins.$(OBJEXT): ../config.h
mkbuiltins.$(OBJEXT): mkbuiltins.c
	$(RM) $@
	$(CC_FOR_BUILD) -c $(CCFLAGS_FOR_BUILD) $<

mkbuiltins$(EXEEXT): mkbuiltins.$(OBJEXT)
	$(CC_FOR_BUILD) $(LDFLAGS_FOR_BUILD) -o $(MKBUILTINS) mkbuiltins.$(OBJEXT) $(LIBS_FOR_BUILD)

# rules for deficient makes, like SunOS
mkbuiltins.$(OBJEXT): mkbuiltins.c
builtins.$(OBJEXT): builtins.c
common.$(OBJEXT): common.c
bashgetopt.$(OBJEXT): bashgetopt.c
getopt.$(OBJEXT): getopt.c
evalstring.$(OBJEXT): evalstring.c
evalfile.$(OBJEXT): evalfile.c

tmpbuiltins.$(OBJEXT): tmpbuiltins.c
gen-helpfiles.$(OBJEXT): gen-helpfiles.c

ulimit.$(OBJEXT): pipesize.h

pipesize.h:	psize.aux
	$(SHELL) $(srcdir)/psize.sh > $@

# Technically this is wrong; the pipe size should be for the target system,
# not the build host.
psize.aux:	psize.c
	$(CC_FOR_BUILD) $(CCFLAGS_FOR_BUILD) ${LDFLAGS_FOR_BUILD} -o $@ $(srcdir)/psize.c $(LIBS_FOR_BUILD)

documentation: builtins.texi

builtins.texi: $(MKBUILTINS)
	./$(MKBUILTINS) -documentonly $(DEFSRC)

clean:
	$(RM) $(OFILES) $(CREATED_FILES) libbuiltins.a
	$(RM) $(MKBUILTINS) gen-helpfiles $(CREATED_OBJECTS)
	-test -d helpfiles && $(RM) -r helpfiles

mostlyclean:
	$(RM) $(OFILES) libbuiltins.a

distclean maintainer-clean: clean
	$(RM) Makefile

$(OFILES):	$(MKBUILTINS) ../config.h

../version.h: ../config.h ../Makefile Makefile
	-( cd ${BUILD_DIR} && ${MAKE} ${MFLAGS} version.h )

# maintainer special - for now
po:	builtins.c
	xgettext -L C -o $(topdir)/po/builtins.pot --keyword='N_' builtins.c 2>/dev/null

${LIBINTL_H}:
	@echo making $@ in ${INTL_BUILDDIR}
	@(cd ${INTL_BUILDDIR} && \
		$(MAKE) $(MFLAGS) libintl.h) || exit 1

# dependencies

alias.$(OBJEXT): alias.def
bind.$(OBJEXT): bind.def
break.$(OBJEXT): break.def
builtin.$(OBJEXT): builtin.def
caller.$(OBJEXT): caller.def
cd.$(OBJEXT): cd.def
colon.$(OBJEXT): colon.def
command.$(OBJEXT): command.def
declare.$(OBJEXT): declare.def
echo.$(OBJEXT): echo.def
enable.$(OBJEXT): enable.def
eval.$(OBJEXT): eval.def
exec.$(OBJEXT): exec.def
exit.$(OBJEXT): exit.def
fc.$(OBJEXT): fc.def
fg_bg.$(OBJEXT): fg_bg.def
hash.$(OBJEXT): hash.def
help.$(OBJEXT): help.def
history.$(OBJEXT): history.def
jobs.$(OBJEXT): jobs.def
kill.$(OBJEXT): kill.def
let.$(OBJEXT): let.def
mapfile.$(OBJEXT): mapfile.def
printf.$(OBJEXT): printf.def
pushd.$(OBJEXT): pushd.def
read.$(OBJEXT): read.def
return.$(OBJEXT): return.def
set.$(OBJEXT): set.def
setattr.$(OBJEXT): setattr.def
shift.$(OBJEXT): shift.def
shopt.$(OBJEXT): shopt.def
source.$(OBJEXT): source.def
suspend.$(OBJEXT): suspend.def
test.$(OBJEXT): test.def
times.$(OBJEXT): times.def
trap.$(OBJEXT): trap.def
type.$(OBJEXT): type.def
ulimit.$(OBJEXT): ulimit.def
umask.$(OBJEXT): umask.def
wait.$(OBJEXT): wait.def
getopts.$(OBJEXT): getopts.def
reserved.$(OBJEXT): reserved.def
complete.$(OBJEXT): complete.def

# C files
bashgetopt.$(OBJEXT): ../config.h $(topdir)/bashansi.h $(BASHINCDIR)/ansi_stdlib.h
bashgetopt.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/bashjmp.h
bashgetopt.$(OBJEXT): $(topdir)/command.h $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/error.h
bashgetopt.$(OBJEXT): $(topdir)/variables.h $(topdir)/conftypes.h $(topdir)/quit.h $(BASHINCDIR)/maxpath.h
bashgetopt.$(OBJEXT): $(topdir)/unwind_prot.h $(topdir)/dispose_cmd.h
bashgetopt.$(OBJEXT): $(topdir)/make_cmd.h $(topdir)/subst.h $(topdir)/sig.h
bashgetopt.$(OBJEXT): ../pathnames.h $(topdir)/externs.h $(srcdir)/common.h
bashgetopt.$(OBJEXT): $(BASHINCDIR)/chartypes.h
common.$(OBJEXT): $(topdir)/bashtypes.h $(BASHINCDIR)/posixstat.h $(topdir)/bashansi.h $(BASHINCDIR)/ansi_stdlib.h
common.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h ../config.h $(topdir)/bashjmp.h $(BASHINCDIR)/posixjmp.h
common.$(OBJEXT): $(topdir)/sig.h $(topdir)/command.h $(topdir)/parser.h
common.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(BASHINCDIR)/stdc.h $(BASHINCDIR)/memalloc.h
common.$(OBJEXT): $(topdir)/variables.h $(topdir)/conftypes.h $(topdir)/input.h
common.$(OBJEXT): $(topdir)/siglist.h $(topdir)/bashhist.h $(topdir)/quit.h
common.$(OBJEXT): $(topdir)/unwind_prot.h $(BASHINCDIR)/maxpath.h $(topdir)/jobs.h
common.$(OBJEXT): $(topdir)/builtins.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
common.$(OBJEXT): $(topdir)/subst.h $(topdir)/execute_cmd.h $(topdir)/error.h
common.$(OBJEXT): $(topdir)/externs.h ../pathnames.h ./builtext.h
common.$(OBJEXT): $(BASHINCDIR)/chartypes.h
evalfile.$(OBJEXT): $(topdir)/bashtypes.h $(BASHINCDIR)/posixstat.h ${BASHINCDIR}/filecntl.h
evalfile.$(OBJEXT): $(topdir)/bashansi.h $(BASHINCDIR)/ansi_stdlib.h
evalfile.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h ../config.h $(topdir)/bashjmp.h
evalfile.$(OBJEXT): $(topdir)/command.h $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/error.h
evalfile.$(OBJEXT): $(topdir)/variables.h $(topdir)/conftypes.h $(topdir)/quit.h $(BASHINCDIR)/maxpath.h
evalfile.$(OBJEXT): $(topdir)/unwind_prot.h $(topdir)/dispose_cmd.h
evalfile.$(OBJEXT): $(topdir)/make_cmd.h $(topdir)/subst.h $(topdir)/sig.h
evalfile.$(OBJEXT): ../pathnames.h $(topdir)/externs.h $(topdir)/parser.h
evalfile.$(OBJEXT): $(topdir)/jobs.h $(topdir)/builtins.h $(topdir)/flags.h
evalfile.$(OBJEXT): $(topdir)/input.h $(topdir)/execute_cmd.h
evalfile.$(OBJEXT): $(topdir)/bashhist.h $(srcdir)/common.h
evalstring.$(OBJEXT): ../config.h $(topdir)/bashansi.h $(BASHINCDIR)/ansi_stdlib.h
evalstring.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/bashjmp.h $(BASHINCDIR)/posixjmp.h
evalstring.$(OBJEXT): $(topdir)/sig.h $(topdir)/command.h $(topdir)/siglist.h
evalstring.$(OBJEXT): $(BASHINCDIR)/memalloc.h $(topdir)/variables.h $(topdir)/conftypes.h $(topdir)/input.h
evalstring.$(OBJEXT): $(topdir)/quit.h $(topdir)/unwind_prot.h
evalstring.$(OBJEXT): $(BASHINCDIR)/maxpath.h $(topdir)/jobs.h $(topdir)/builtins.h
evalstring.$(OBJEXT): $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/subst.h
evalstring.$(OBJEXT): $(topdir)/externs.h $(topdir)/jobs.h $(topdir)/builtins.h
evalstring.$(OBJEXT): $(topdir)/flags.h $(topdir)/input.h $(topdir)/execute_cmd.h
evalstring.$(OBJEXT): $(topdir)/bashhist.h $(srcdir)/common.h
evalstring.$(OBJEXT): $(topdir)/trap.h $(topdir)/redir.h ../pathnames.h ./builtext.h
#evalstring.$(OBJEXT): $(topdir)/y.tab.h
getopt.$(OBJEXT): ../config.h $(BASHINCDIR)/memalloc.h
getopt.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/bashjmp.h $(topdir)/command.h
getopt.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/error.h $(topdir)/variables.h $(topdir)/conftypes.h
getopt.$(OBJEXT): $(topdir)/quit.h $(BASHINCDIR)/maxpath.h $(topdir)/unwind_prot.h
getopt.$(OBJEXT): $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/subst.h
getopt.$(OBJEXT): $(topdir)/sig.h ../pathnames.h $(topdir)/externs.h
getopt.$(OBJEXT): $(srcdir)/getopt.h
mkbuiltins.$(OBJEXT): ../config.h $(topdir)/bashtypes.h $(BASHINCDIR)/posixstat.h
mkbuiltins.$(OBJEXT): ${BASHINCDIR}/filecntl.h
mkbuiltins.$(OBJEXT): $(topdir)/bashansi.h $(BASHINCDIR)/ansi_stdlib.h

# def files
alias.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
alias.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h $(BASHINCDIR)/maxpath.h
alias.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
alias.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(srcdir)/common.h
alias.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
alias.$(OBJEXT): ../pathnames.h
bind.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/error.h
bind.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
bind.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(srcdir)/bashgetopt.h
bind.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(BASHINCDIR)/maxpath.h $(topdir)/bashline.h
bind.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
break.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
break.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
break.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
break.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
break.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
break.$(OBJEXT): ../pathnames.h $(topdir)/execute_cmd.h
builtin.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
builtin.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/externs.h
builtin.$(OBJEXT): $(topdir)/quit.h $(srcdir)/common.h $(BASHINCDIR)/maxpath.h $(topdir)/sig.h
builtin.$(OBJEXT): $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/subst.h
builtin.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
builtin.$(OBJEXT): $(srcdir)/bashgetopt.h ../pathnames.h $(topdir)/execute_cmd.h
caller.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/error.h
caller.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/quit.h $(topdir)/dispose_cmd.h
caller.$(OBJEXT): $(topdir)/make_cmd.h $(topdir)/subst.h $(topdir)/externs.h $(topdir)/sig.h
caller.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
caller.$(OBJEXT): $(srcdir)/common.h $(BASHINCDIR)/maxpath.h ./builtext.h
caller.$(OBJEXT): ${BASHINCDIR}/chartypes.h $(topdir)/bashtypes.h ../pathnames.h
cd.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/error.h
cd.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/quit.h $(topdir)/dispose_cmd.h
cd.$(OBJEXT): $(topdir)/make_cmd.h $(topdir)/subst.h $(topdir)/externs.h
cd.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
cd.$(OBJEXT): $(srcdir)/common.h $(BASHINCDIR)/maxpath.h ../pathnames.h
cd.$(OBJEXT): $(topdir)/sig.h
colon.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/error.h
colon.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/subst.h $(topdir)/externs.h
colon.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
colon.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
colon.$(OBJEXT): $(BASHINCDIR)/maxpath.h ../pathnames.h
colon.$(OBJEXT): $(srcdir)/common.h
command.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
command.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/externs.h
command.$(OBJEXT): $(topdir)/quit.h $(srcdir)/bashgetopt.h $(BASHINCDIR)/maxpath.h
command.$(OBJEXT): $(topdir)/sig.h
command.$(OBJEXT): $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/subst.h
command.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
command.$(OBJEXT): ../pathnames.h
declare.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
declare.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
declare.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
declare.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
declare.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
declare.$(OBJEXT): $(topdir)/arrayfunc.h $(srcdir)/bashgetopt.h $(topdir)/flags.h
declare.$(OBJEXT): ./builtext.h ../pathnames.h
echo.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/error.h
echo.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/subst.h $(topdir)/externs.h
echo.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
echo.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
echo.$(OBJEXT): $(BASHINCDIR)/maxpath.h ../pathnames.h
echo.$(OBJEXT): $(srcdir)/common.h
enable.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
enable.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
enable.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
enable.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(topdir)/sig.h
enable.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
enable.$(OBJEXT): $(BASHINCDIR)/maxpath.h ../pathnames.h
enable.$(OBJEXT): $(topdir)/pcomplete.h
eval.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
eval.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
eval.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
eval.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h  $(topdir)/sig.h
eval.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
eval.$(OBJEXT): $(BASHINCDIR)/maxpath.h ../pathnames.h
exec.$(OBJEXT): $(topdir)/bashtypes.h
exec.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
exec.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
exec.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
exec.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(topdir)/flags.h
exec.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
exec.$(OBJEXT): $(srcdir)/common.h $(topdir)/execute_cmd.h $(BASHINCDIR)/maxpath.h
exec.$(OBJEXT): $(topdir)/findcmd.h $(topdir)/jobs.h ../pathnames.h
exit.$(OBJEXT): $(topdir)/bashtypes.h
exit.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
exit.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
exit.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
exit.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h  $(topdir)/jobs.h
exit.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
exit.$(OBJEXT): $(topdir)/execute_cmd.h
exit.$(OBJEXT): $(BASHINCDIR)/maxpath.h ./builtext.h ../pathnames.h
fc.$(OBJEXT): $(topdir)/bashtypes.h $(BASHINCDIR)/posixstat.h
fc.$(OBJEXT): $(topdir)/builtins.h $(topdir)/command.h $(srcdir)/bashgetopt.h
fc.$(OBJEXT): $(topdir)/bashhist.h $(topdir)/parser.h
fc.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/error.h
fc.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(BASHINCDIR)/maxpath.h
fc.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
fc.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(topdir)/shell.h $(topdir)/syntax.h
fc.$(OBJEXT): $(topdir)/flags.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
fc.$(OBJEXT): $(topdir)/bashansi.h $(BASHINCDIR)/ansi_stdlib.h $(BASHINCDIR)/chartypes.h
fc.$(OBJEXT): ../pathnames.h
fg_bg.$(OBJEXT): $(topdir)/bashtypes.h $(srcdir)/bashgetopt.h
fg_bg.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
fg_bg.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
fg_bg.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
fg_bg.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
fg_bg.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
fg_bg.$(OBJEXT): $(topdir)/execute_cmd.h
fg_bg.$(OBJEXT): $(topdir)/jobs.h ../pathnames.h
getopts.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
getopts.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
getopts.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
getopts.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
getopts.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
getopts.$(OBJEXT): $(topdir)/execute_cmd.h
getopts.$(OBJEXT): ../pathnames.h
hash.$(OBJEXT): $(topdir)/builtins.h $(topdir)/command.h $(topdir)/quit.h
hash.$(OBJEXT): $(topdir)/findcmd.h $(topdir)/hashlib.h $(topdir)/sig.h
hash.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
hash.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
hash.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h
hash.$(OBJEXT): $(topdir)/conftypes.h $(topdir)/execute_cmd.h
hash.$(OBJEXT): $(srcdir)/common.h $(BASHINCDIR)/maxpath.h ../pathnames.h
help.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
help.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
help.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
help.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
help.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h
help.$(OBJEXT): $(topdir)/conftypes.h $(topdir)/execute_cmd.h
help.$(OBJEXT): ${srcdir}/common.h $(topdir)/sig.h ../pathnames.h
history.$(OBJEXT): $(topdir)/bashtypes.h
history.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
history.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
history.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
history.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(topdir)/sig.h  $(topdir)/parser.h
history.$(OBJEXT): ${BASHINCDIR}/filecntl.h $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h
history.$(OBJEXT): $(topdir)/variables.h $(topdir)/conftypes.h $(topdir)/bashhist.h $(BASHINCDIR)/maxpath.h
history.$(OBJEXT): ../pathnames.h
inlib.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
inlib.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
inlib.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
inlib.$(OBJEXT): $(BASHINCDIR)/maxpath.h $(topdir)/subst.h $(topdir)/externs.h
inlib.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h ../pathnames.h
jobs.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/error.h
jobs.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/quit.h $(srcdir)/bashgetopt.h
jobs.$(OBJEXT): $(BASHINCDIR)/maxpath.h $(topdir)/externs.h $(topdir)/jobs.h
jobs.$(OBJEXT): $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/subst.h
jobs.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
jobs.$(OBJEXT): $(topdir)/sig.h ../pathnames.h
kill.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/error.h
kill.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/subst.h $(topdir)/externs.h
kill.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
kill.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/trap.h $(topdir)/unwind_prot.h
kill.$(OBJEXT): $(topdir)/variables.h $(topdir)/conftypes.h $(BASHINCDIR)/maxpath.h
kill.$(OBJEXT): $(topdir)/jobs.h ../pathnames.h
let.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
let.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
let.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
let.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
let.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
let.$(OBJEXT): ../pathnames.h
printf.$(OBJEXT): ../config.h $(BASHINCDIR)/memalloc.h $(topdir)/bashjmp.h
printf.$(OBJEXT): $(topdir)/command.h $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
printf.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
printf.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(topdir)/sig.h
printf.$(OBJEXT): ../pathnames.h $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h
printf.$(OBJEXT): $(topdir)/variables.h $(topdir)/conftypes.h $(BASHINCDIR)/stdc.h $(srcdir)/bashgetopt.h
printf.$(OBJEXT): $(topdir)/bashtypes.h ${srcdir}/common.h $(BASHINCDIR)/chartypes.h
printf.$(OBJEXT): ${BASHINCDIR}/shmbutil.h ${BASHINCDIR}/shmbchar.h
printf.$(OBJEXT): ../pathnames.h
pushd.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
pushd.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
pushd.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
pushd.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(topdir)/sig.h
pushd.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
pushd.$(OBJEXT): $(BASHINCDIR)/maxpath.h $(srcdir)/common.h ./builtext.h
pushd.$(OBJEXT): ../pathnames.h
read.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
read.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
read.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
read.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
read.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
read.$(OBJEXT): $(BASHINCDIR)/shtty.h $(topdir)/sig.h
read.$(OBJEXT): ${BASHINCDIR}/shmbutil.h ${BASHINCDIR}/shmbchar.h
read.$(OBJEXT): $(topdir)/arrayfunc.h ../pathnames.h
return.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
return.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
return.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
return.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
return.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h
return.$(OBJEXT): $(topdir)/conftypes.h $(topdir)/execute_cmd.h
return.$(OBJEXT): ../pathnames.h
set.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
set.$(OBJEXT): $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/subst.h $(topdir)/externs.h
set.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
set.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
set.$(OBJEXT): $(BASHINCDIR)/maxpath.h $(topdir)/error.h $(topdir)/sig.h
set.$(OBJEXT): $(topdir)/arrayfunc.h ../pathnames.h $(topdir)/parser.h
setattr.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
setattr.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h $(BASHINCDIR)/maxpath.h
setattr.$(OBJEXT): $(topdir)/quit.h $(srcdir)/common.h $(srcdir)/bashgetopt.h
setattr.$(OBJEXT): $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/subst.h
setattr.$(OBJEXT): $(topdir)/externs.h $(topdir)/flags.h $(topdir)/sig.h
setattr.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h
setattr.$(OBJEXT): $(topdir)/conftypes.h $(topdir)/execute_cmd.h
setattr.$(OBJEXT): $(topdir)/arrayfunc.h ../pathnames.h
shift.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
shift.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
shift.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
shift.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
shift.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
shift.$(OBJEXT): ../pathnames.h
shopt.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h ../version.h
shopt.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
shopt.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
shopt.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
shopt.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
shopt.$(OBJEXT): $(srcdir)/common.h $(srcdir)/bashgetopt.h ../pathnames.h
shopt.$(OBJEXT): $(topdir)/bashhist.h $(topdir)/bashline.h $(topdir)/sig.h
source.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
source.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/findcmd.h
source.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
source.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
source.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
source.$(OBJEXT): $(srcdir)/bashgetopt.h $(topdir)/flags.h $(topdir)/trap.h
source.$(OBJEXT): $(topdir)/execute_cmd.h
source.$(OBJEXT): ../pathnames.h
suspend.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
suspend.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
suspend.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
suspend.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
suspend.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
suspend.$(OBJEXT): $(topdir)/jobs.h ../pathnames.h
test.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
test.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
test.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
test.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
test.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
test.$(OBJEXT): $(topdir)/execute_cmd.h $(topdir)/test.h ../pathnames.h
times.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
times.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
times.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
times.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
times.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
times.$(OBJEXT): $(BASHINCDIR)/posixtime.h ../pathnames.h
trap.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
trap.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h $(topdir)/externs.h
trap.$(OBJEXT): $(topdir)/quit.h $(srcdir)/common.h $(BASHINCDIR)/maxpath.h $(topdir)/sig.h
trap.$(OBJEXT): $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/subst.h
trap.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
trap.$(OBJEXT): $(topdir)/findcmd.h ../pathnames.h
type.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
type.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
type.$(OBJEXT): $(topdir)/quit.h $(srcdir)/common.h $(BASHINCDIR)/maxpath.h $(topdir)/sig.h
type.$(OBJEXT): $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/subst.h
type.$(OBJEXT): $(topdir)/execute_cmd.h $(topdir)/parser.h
type.$(OBJEXT): $(topdir)/externs.h $(topdir)/hashcmd.h ../pathnames.h
type.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
ulimit.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
ulimit.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
ulimit.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
ulimit.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
ulimit.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
ulimit.$(OBJEXT): ../pathnames.h
umask.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
umask.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
umask.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
umask.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
umask.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
umask.$(OBJEXT): $(BASHINCDIR)/chartypes.h ../pathnames.h
wait.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
wait.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
wait.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h
wait.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
wait.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/unwind_prot.h $(topdir)/variables.h $(topdir)/conftypes.h
wait.$(OBJEXT): $(topdir)/jobs.h $(topdir)/sig.h $(topdir)/execute_cmd.h
wait.$(OBJEXT): $(BASHINCDIR)/chartypes.h ../pathnames.h

complete.$(OBJEXT): ../config.h ../pathnames.h
complete.$(OBJEXT): ${topdir}/shell.h $(topdir)/syntax.h ${topdir}/bashjmp.h ${BASHINCDIR}/posixjmp.h ${topdir}/sig.h
complete.$(OBJEXT): ${topdir}/unwind_prot.h ${topdir}/variables.h
complete.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
complete.$(OBJEXT): ${topdir}/bashtypes.h ${topdir}/bashansi.h ${BASHINCDIR}/ansi_stdlib.h
complete.$(OBJEXT): ${topdir}/builtins.h ${topdir}/general.h
complete.$(OBJEXT): ${topdir}/bashtypes.h ${BASHINCDIR}/chartypes.h ${topdir}/xmalloc.h
complete.$(OBJEXT): ${topdir}/pcomplete.h
complete.$(OBJEXT): ${srcdir}/common.h ${srcdir}/bashgetopt.h
mapfile.$(OBJEXT): $(topdir)/command.h ../config.h $(BASHINCDIR)/memalloc.h
mapfile.$(OBJEXT): $(topdir)/error.h $(topdir)/general.h $(topdir)/xmalloc.h
mapfile.$(OBJEXT): $(topdir)/quit.h $(topdir)/dispose_cmd.h $(topdir)/make_cmd.h $(topdir)/sig.h
mapfile.$(OBJEXT): $(topdir)/subst.h $(topdir)/externs.h $(BASHINCDIR)/maxpath.h
mapfile.$(OBJEXT): $(topdir)/shell.h $(topdir)/syntax.h $(topdir)/variables.h $(topdir)/conftypes.h
mapfile.$(OBJEXT): $(topdir)/arrayfunc.h ../pathnames.h

#bind.$(OBJEXT): $(RL_LIBSRC)chardefs.h $(RL_LIBSRC)readline.h $(RL_LIBSRC)keymaps.h

# libintl dependencies
bind.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
break.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
caller.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
cd.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
common.c: ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
complete.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
declare.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
enable.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
evalfile.c: ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
exec.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
exit.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
fc.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
fg_bg.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
getopt.c: ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
hash.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
help.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
history.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
inlib.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
jobs.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
kill.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
let.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
mapfile.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
mkbuiltins.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
printf.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
pushd.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
read.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
return.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
set.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
setattr.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
shift.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
shopt.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
source.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
suspend.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
type.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
ulimit.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h
umask.$(OBJEXT): ${topdir}/bashintl.h ${LIBINTL_H} $(BASHINCDIR)/gettext.h

cd.$(OBJEXT): $(topdir)/config-top.h
command.$(OBJEXT): $(topdir)/config-top.h
common.$(OBJEXT): $(topdir)/config-top.h
declare.$(OBJEXT): $(topdir)/config-top.h
break.$(OBJEXT): $(topdir)/config-top.h
echo.$(OBJEXT): $(topdir)/config-top.h
evalstring.$(OBJEXT): $(topdir)/config-top.h
exit.$(OBJEXT): $(topdir)/config-top.h
kill.$(OBJEXT): $(topdir)/config-top.h
shopt.$(OBJEXT): $(topdir)/config-top.h
